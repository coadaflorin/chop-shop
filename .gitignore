# Generated by Cargo
# will have compiled files and executables
debug/
target/

# Remove Cargo.lock from gitignore if creating an executable, leave it for libraries
# More information here https://doc.rust-lang.org/cargo/guide/cargo-toml-vs-cargo-lock.html
Cargo.lock

#ignore QL databases 
chop-shop-db/

# These are backup files generated by rustfmt
**/*.rs.bk

# MSVC Windows builds of rustc generate these, which store debugging information
*.pdb

# RustRover
#  JetBrains specific template is maintained in a separate JetBrains.gitignore that can
#  be found at https://github.com/github/gitignore/blob/main/Global/JetBrains.gitignore
#  and can be added to the global gitignore or merged into this file.  For a more nuclear
#  option (not recommended) you can uncomment the following to ignore the entire idea folder.
#.idea/

# Database files
*.db
*.db-shm
*.db-wal
*.sqlite
*.sqlite3
*.sqlite-shm
*.sqlite-wal
*.db.backup
*.sqlite.backup

# Database diagnostic files
db-diagnostic.json
db-stats.json

# Environment variables and local config
.env
.env.local
.env.development
.env.test
.env.production
config.local.toml
config.local.yaml
config.local.yml
config.local.json

# Log files
logs/
*.log
log.txt
npm-debug.log*
yarn-debug.log*
yarn-error.log*

# OS specific files
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
ehthumbs.db
Thumbs.db

# Editor directories and files
.vscode/
.idea/
*.swp
*.swo
*~